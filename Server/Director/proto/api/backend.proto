syntax = "proto3";
package openmatch;

option csharp_namespace = "OpenMatch";

import "api/messages.proto";
import "google/api/annotations.proto";

message FunctionConfig {
	string host = 1;
	int32 port = 2;
	Type type = 3;
	enum Type {
		GRPC = 0;
		REST = 1;
	}
}

message FetchMatchesRequest {
	FunctionConfig config = 1;
	MatchProfile profile = 2;
}

message FetchMatchesResponse {
	Match match = 1;
}

message ReleaseTicketsRequest {
	repeated string ticket_ids = 1;
}

message ReleaseTicketsResponse {}

message ReleaseAllTicketsRequest {}

message ReleaseAllTicketsResponse {}

message AssignmentGroup {
	repeated string ticket_ids = 1;
	Assignment assignment = 2;
}

message AssignmentFailure {
	enum Cause {
		UNKNOWN = 0;
		TICKET_NOT_FOUND = 1;
	}

	string ticket_id = 1;
	Cause cause = 2;
}

message AssignTicketsRequest {
	repeated AssignmentGroup assignments = 1;
}

message AssignTicketsResponse {
	repeated AssignmentFailure failures = 1;
}

service BackendService {
	rpc FetchMatches (FetchMatchesRequest) returns (stream FetchMatchesResponse) {
		option (google.api.http) = {
			post: "/v1/backendservice/matches:fetch"
			body: "*"
		};
	}

	rpc AssignTickets (AssignTicketsRequest) returns (AssignTicketsResponse) {
		option (google.api.http) = {
			post: "/v1/backendservice/tickets:assign"
			body: "*"
		};
	}

	rpc ReleaseTickets (ReleaseTicketsRequest) returns (ReleaseTicketsResponse) {
		option (google.api.http) = {
			post: "/v1/backendservice/tickets:release"
			body: "*"
		};
	}

	rpc ReleaseAllTickets (ReleaseAllTicketsRequest) returns (ReleaseAllTicketsResponse) {
		option (google.api.http) = {
			post: "/v1/backendserver/tickets:releaseall"
			body: "*"
		};
	}
}